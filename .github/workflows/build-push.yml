name: CI/CD - Log Ingestor

on:
  push:
    branches: [master, test]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify
    # NO tests were created
    #   - name: Run tests
    #     run: go test ./test -v -race -coverprofile=coverage.out


  docker-build-and-push:
    name: Docker Build & Push to GHCR
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master'

    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: salah-zeddine/log-processor

    steps:
      - name: Checkout source
        uses: actions/checkout@v4


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{env.IMAGE_NAME}}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
